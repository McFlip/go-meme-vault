package components

import (
	"github.com/McFlip/go-meme-vault/internal/models"
	"net/url"
	"strconv"
	"fmt"
)

func tagUrl(tags []models.Tag, availableTag models.Tag) string {
	baseUrl := "/memes"
	qStr := url.Values{}
	tags = append(tags, availableTag)
	for _, t := range tags {
		qStr.Add("tag", strconv.Itoa(int(t.ID)))
	}
	return fmt.Sprintf("%s?%s", baseUrl, qStr.Encode())
}

func selectedTagUrl(tags []models.Tag, selectedTag models.Tag) string {
	baseUrl := "/memes"
	qStr := url.Values{}
	for _, t := range tags {
		if t.ID != selectedTag.ID {
			qStr.Add("tag", strconv.Itoa(int(t.ID)))
		}
	}
	return fmt.Sprintf("%s?%s", baseUrl, qStr.Encode())
}

templ Memes(tags []models.Tag, memes []models.Meme, availableTags []models.Tag) {
	<div>
		<h1>MEMES</h1>
		<div>
			<h2>Selected Tags</h2>
			<ul>
				for _, tag := range tags {
					<li>
						<a hx-target="main" href={ templ.SafeURL(selectedTagUrl(tags, tag)) }>{ tag.Name }</a>
					</li>
				}
			</ul>
		</div>
		<div>
			<h2>Available Tags</h2>
			<ul>
				for _, tag := range availableTags {
					<li>
						<a hx-target="main" href={ templ.SafeURL(tagUrl(tags, tag)) }>{ tag.Name }</a>
					</li>
				}
			</ul>
		</div>
		<div>
			@MemesList(memes)
		</div>
	</div>
}
